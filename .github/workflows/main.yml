name: 'main'

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  build-binaries:
    runs-on: ubuntu-latest
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Build binaries
      run: |
        ./build_binaries.sh
        # By default actions/upload-artifact@v2 do not preserve file permissions
        # tar directory to workaround this issue
        # See https://github.com/actions/upload-artifact/issues/38
        tar -cvf binaries.tar image

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: binaries.tar

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix
        id: generate-matrix
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests -s ibex synthesis OneClass hello-uvm OneThis array-copy assignment-pattern)"
          echo "::set-output name=matrix::$matrix"
          echo "Matrix: $matrix"

  generate-ibex-modules:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-ibex-modules.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix
        id: generate-ibex-modules
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests/ibex/module_tests)"
          echo "::set-output name=matrix::$matrix"
          echo "Matrix: $matrix"

  tests:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-matrix]
    strategy:
      matrix:
        TEST_CASE: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      TARGET: uhdm/verilator/test-ast

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test
      run: ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE }}
        TARGET: ${{ matrix.TARGET }}


  ibex-module-tests:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-ibex-modules]
    strategy:
      matrix:
        TEST_CASE: ${{ fromJson(needs.generate-ibex-modules.outputs.matrix) }}
        TARGET:
          - uhdm/verilator/test-ast
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test
      run: |
        pip install virtualenv
        virtualenv venv-ibex
        . venv-ibex/bin/activate
        pip install -r uhdm-integration/tests/ibex/ibex/python-requirements.txt
        cd uhdm-integration/tests/ibex/ibex
        fusesoc --cores-root=. run --target=synth --setup lowrisc:ibex:top_artya7 --part xc7a35ticsg324-1L
        cd ../../../..
        ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE }}
        TARGET: ${{ matrix.TARGET }}

  simple-system-sim:
    runs-on: ubuntu-latest
    needs: build-binaries
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev libelf-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test (uhdm verilator)
      run: |
        pip install virtualenv
        ./uhdm-integration/.github/ci.sh
        ./uhdm-integration/build/lowrisc_ibex_ibex_simple_system_0/sim-verilator/Vibex_simple_system --meminit=ram,uhdm-integration/hello_test.elf
        mkdir output_uhdm
        cp ibex_simple_system.log ibex_simple_system_pcount.csv trace_core_00000000.log output_uhdm/
      env:
        TARGET: uhdm/verilator/simple-system
        TEST_CASE: tests/ibex

    - name: Build & Test (vanilla verilator)
      run: |
        ./uhdm-integration/.github/ci.sh
        ./uhdm-integration/build/lowrisc_ibex_ibex_simple_system_0/sim-verilator/Vibex_simple_system --meminit=ram,uhdm-integration/hello_test.elf
        diff -y ibex_simple_system.log output_uhdm/ibex_simple_system.log
      env:
        TARGET: verilator/simple-system
        TEST_CASE: tests/ibex

    - uses: actions/upload-artifact@v2
      with:
        name: simple-system-simulation-output
        path: output_uhdm

  generate-matrix-vcddiff:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix-vcddiff.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix (vcddiff)
        id: generate-matrix-vcddiff
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests -s ibex synthesis OneClass hello-uvm OneThis array-copy assignment-pattern MultiplePrints OneNetInterf OneNetRange opentitan)"
          echo "::set-output name=matrix::$matrix"
          echo "matrix vcddiff: $matrix"

  tests-vcddiff:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-matrix-vcddiff]
    strategy:
      matrix:
        TEST_CASE_VCDDIFF: ${{ fromJson(needs.generate-matrix-vcddiff.outputs.matrix) }}
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: |
        tar -xf binaries.tar

    - name: Download artifact
      run: |
        test_name="${TEST_CASE:6}"
        echo $test_name
        curl -s -H "Authorization: token ${{github.token}}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${REPO}/actions/workflows/${WORKFLOW_FILE}/runs?branch=${BRANCH}&status=success" | \
        sed -n -e 's/^.*"artifacts_url": //p' | sed 's/.\{1\}$//' | head -n1 | xargs -I '{}' curl -s -H "Authorization: token ${{github.token}}" -H "Accept: application/vnd.github.v3+json" "{}?per_page=100" | \
        python3 .github/get_artifact_id.py ${test_name}.sv |
        xargs -I '{}' curl -s -H "Authorization: token ${{github.token}}" -H "Accept: application/vnd.github.v3+json" -D - https://api.github.com/repos/${REPO}/actions/artifacts/{}/zip | \
        sed -n -e 's/^.*location: //p' | sed 's/.\{1\}$//' | xargs -I"{}" curl --url "{}" --output ${test_name}.zip
        mkdir -p uhdm-integration/build
        unzip ${test_name}.zip -d uhdm-integration/build
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_VCDDIFF }}
        BRANCH: remove-verilator
        REPO: antmicro/yosys
        WORKFLOW_FILE: main.yml

    - name: Generate vcd dump (Yosys)
      run: |
        ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_VCDDIFF }}
        TARGET: uhdm/yosys/verilate-ast

    - name: Generate vcd dump (verilator)
      run: ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_VCDDIFF }}
        TARGET: uhdm/verilator/test-ast

    - name: Compare vcd dumps (vcddiff)
      run: ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_VCDDIFF }}
        TARGET: uhdm/vcddiff

